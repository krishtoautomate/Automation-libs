/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/java_library_plugin.html
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'groovy'
}

def timestamp() {
    return new Date().format('yyyy-MM-dd')
}

repositories {

    mavenLocal()
    google()
    mavenCentral()
    maven {
        url 'https://artifactory.bell.corp.bce.ca/ui/native/central-maven'
        allowInsecureProtocol = true
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation files('libs/Base.jar')

    testImplementation 'org.testng:testng:7.7.0'

    testImplementation 'org.seleniumhq.selenium:selenium-java:4.11.0'
    testImplementation 'org.seleniumhq.selenium:selenium-support:4.11.0'

    testImplementation 'io.appium:java-client:8.5.1'

    implementation 'commons-io:commons-io:2.11.0'

    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    implementation 'javax.mail:mail:1.4'
    implementation 'org.json:json:20230227'
    implementation 'com.opencsv:opencsv:5.7.1'
    implementation 'com.jcraft:jsch:0.1.54'
    implementation 'org.bytedeco.javacpp-presets:tesseract:4.0.0-1.4.4'

    testImplementation 'io.rest-assured:rest-assured:5.3.0'

    testImplementation 'com.aventstack:extentreports:5.1.0'

    testImplementation 'log4j:log4j:1.2.17'
    testImplementation 'org.slf4j:slf4j-api:2.0.5'
    testImplementation 'org.slf4j:slf4j-jdk14:2.0.5'

    testImplementation "com.oracle.ojdbc:ojdbc8:19.3.0.0"


    testImplementation 'org.usb4java:usb4java-javax:1.2.0'

    testImplementation 'com.slack.api:slack-api-client:1.28.0'


}

group = 'Automation-libs'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked"
        }
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
        }
    }
}

//./gradlew BaseJar
task BaseJar(type: Jar) {
    from sourceSets.test.output
    include 'com/base/*'
    include 'com/ReportManager/*'
    include 'com/DataManager/*'
    include 'com/Drivers/*'
    destinationDirectory = file("$buildDir/jar")
    archiveFileName.set("Base.jar")
    exclude 'META-INF/MANIFEST.MF'
}

ext {
    javaMainClass = "com.Others.MergeReports"
}

task runMergeReports(type: Exec) {
    dependsOn build
    group = "Execution"
    description = "Run the main class with ExecTask"
    commandLine "java", "-classpath", sourceSets.test.runtimeClasspath.getAsPath(), javaMainClass
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
    testLogging.showStandardStreams = true

    useTestNG() {

        suites '' + System.getProperty('testNGsuiteXmlFile')
        useDefaultListeners = true

    }
    ext.workingDirectory = 'test-output/${timestamp()}'
}
